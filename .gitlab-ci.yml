image: ubuntu:latest

stages:
  - test

.setup_linux: &setup_linux |
  DEBIAN_FRONTEND=noninteractive

  TZ=Canada/Pacific
  ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

  apt-get update -qq
  apt-get install -y --no-install-recommends git make curl gnupg ca-certificates python3-pip

  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32
  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5
  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 1E9377A2BA9EF27F

# with foldable multi-line commands
.setup_cpp: &setup_cpp |
  curl -LJO "https://github.com/aminya/setup-cpp/releases/download/v0.33.0/setup-cpp-x64-linux"
  chmod +x setup-cpp-x64-linux
  echo -e "section_end:"`date +%s`":.setup_cpp\r\e[0Ksection_start:"`date +%s`":hidden_section\r\e[0K setup cpp"
  ./setup-cpp-x64-linux --compiler $compiler --cmake true --ninja true  --ccache true \
    --clangtidy true --clangformat true --cppcheck true --gcovr true
  source ~/.cpprc
  echo -e "section_end:"`date +%s`":hidden_section\r\e[0Ksection_start:"`date +%s`":.setup_cpp\r\e[0K"
  clang --version
  gcc --version
  cmake --version
  echo "ninja --version" && ninja --version

# with foldable multi-line commands
.build:
  script:
    - *setup_cpp
    - echo -e "section_end:"`date +%s`":.build\r\e[0Ksection_start:"`date +%s`":hidden_section\r\e[0K configure"
    - cmake --preset unixlike-${COMPILER}-debug
    - run-clang-tidy -p out/build/unixlike-${COMPILER}-debug -extra-arg=-Wno-unknown-warning-option
    - echo -e "section_end:"`date +%s`":hidden_section\r\e[0Ksection_start:"`date +%s`":.build\r\e[0K"
    - ninja -C out/build/unixlike-${COMPILER}-debug
    - ninja -C out/build/unixlike-${COMPILER}-debug test
    - gcovr .

default:
  before_script:
    - *setup_linux

test_linux_llvm:
  stage: test
  variables:
    compiler: llvm
    COMPILER: clang
  extends: .build

test_linux_gcc:
  stage: test
  variables:
    compiler: gcc
    COMPILER: gcc
  extends: .build
